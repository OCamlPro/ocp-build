(**************************************************************************)
(*                                                                        *)
(*                              OCamlPro TypeRex                          *)
(*                                                                        *)
(*   Copyright OCamlPro 2011-2016. All rights reserved.                   *)
(*   This file is distributed under the terms of the LGPL v2.1 with       *)
(*   the special exception on linking described in the file LICENSE.      *)
(*      (GNU Lesser General Public Licence version 2.1)                   *)
(*                                                                        *)
(*     Contact: <typerex@ocamlpro.com> (http://www.ocamlpro.com/)         *)
(*                                                                        *)
(*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,       *)
(*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES       *)
(*  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND              *)
(*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS   *)
(*  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN    *)
(*  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN     *)
(*  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE      *)
(*  SOFTWARE.                                                             *)
(**************************************************************************)

(* assert 'ocaml' exists *)
ocaml.exists = true;

(* assert fields 'asmcomp' and 'bytecomp' exists and correctly typed *)
ocaml = { asmcomp = []; bytecomp = [] } + ocaml;
begin
  ocaml.version = autoconf.package_version;
  ocaml.files = [
    "fileSig.ml";

    "fileOS.ml";
    "fileChannel.ml";

    "fileString.ml";
    (*    "dirString.ml"; *)

    "fileLabels.mli";
    "fileLabels.ml", { asmcomp = ocaml.asmcomp + [ "-nolabels" ];
                       bytecomp = ocaml.bytecomp + [ "-nolabels" ];
                     };
    "fileLines.ml";

    "file.ml";
    "dir.ml";

    "dirPath.ml";
   ];

  ocaml.requires = [
    "ocplib-lang";
    "ocplib-unix";
  ];
   new_package("ocplib-file", "library", ocaml);
end
