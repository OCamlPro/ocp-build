autoconf = {
  conf_ocamlyacc="@OCAMLYACC@";
  conf_ocamllex="@OCAMLLEX@";
  rootdir="@ROOTDIR@";
  prefix="@prefix@";
  exec_prefix="@exec_prefix@";
  bindir="@bindir@";
  libdir="@libdir@";
  datarootdir="@datarootdir@";
  mandir="@mandir@";
  datadir="@datadir@";
  ocamldir="@ocamldir@";
  metadir="@metadir@";
  package_name="@PACKAGE_NAME@";
  package_version="@PACKAGE_VERSION@";
  opam_repo="@OPAM_REPO@";
  opam_repo_official_remote="@OPAM_REPO_OFFICIAL_REMOTE@";
  opam_repo_fork_remote="@OPAM_REPO_FORK_REMOTE@";
  download_url_prefix="@DOWNLOAD_URL_PREFIX@";
  conf_ocamlversion="@OCAMLVERSION@";
  conf_ocamlc="@OCAMLC@";
  conf_ocamlopt="@OCAMLOPT@";
  conf_ocamldep="@OCAMLDEP@";
  conf_ocamlmktop="@OCAMLMKTOP@";
  conf_ocamlmklib="@OCAMLMKLIB@";
  conf_ocamldoc="@OCAMLDOC@";
  conf_ocamllib="@OCAMLLIB@";
  conf_ocamlbin="@OCAMLBIN@";
  conf_has_bytes="@HAS_BYTES@";
  ocaml_use_binannot = @OCAML_USE_BINANNOT@;
  autoconf_dir = "@PACKAGE_NAME@-autoconf-dir";

}; (* end of "autoconf = {" *)

ocaml.exists = true;
ocaml = { bytecomp = []; asmcomp = [] } + ocaml;

if( autoconf.ocaml_use_binannot && ocaml_version >= "4.00" ) {
  ocaml.bytecomp += [ "-bin-annot" ];
  ocaml.asmcomp += [ "-bin-annot" ];
}

autoconf_cflags = [ "-I"; "autoconf" ];

if( ocaml_version = "4.01.0+ocp1" || ocaml_version = "4.02.1+ocp1" ) {
  string_compat = [];
  ocp_pp = [];
} else {
  string_compat = [ "ocplib-compat" ];
  ocp_pp = [ "ocp-pp" ];
}

if( ocaml_version < "4.01" ){
  compiler_libs_compat = [  "compiler-libs.compat" ];
} else {
  compiler_libs_compat = [];
}
